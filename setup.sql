-- MySQL Script generated by MySQL Workbench
-- 04/24/17 20:22:13
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema skoj
-- -----------------------------------------------------
-- Baza za sajt SKOJ

-- -----------------------------------------------------
-- Schema skoj
--
-- Baza za sajt SKOJ
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `skoj` DEFAULT CHARACTER SET utf8 ;
USE `skoj` ;

-- -----------------------------------------------------
-- Table `skoj`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `skoj`.`users` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Treba dodati jos opcija/atributa koje korisnik pise o sebi i koji se snimaju u bazu',
  `username` VARCHAR(32) NOT NULL,
  `password` VARCHAR(128) NOT NULL,
  `email` VARCHAR(64) NOT NULL,
  `date` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `skoj`.`tasks`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `skoj`.`tasks` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Mogli bi da se dodaju:\n\nCreation date (za)\nModification date (protiv)\nPublic (za)\nMoze da ima Public Admin i Public User, pa da ne moze da se\nobjavi zadatak dok i Admin i User ne potvrde, pri cemu bi default\npolitika bila (protiv, samo user)',
  `name` VARCHAR(32) NOT NULL,
  `statement` BLOB(8192) NOT NULL,
  `author` INT UNSIGNED NOT NULL,
  `date` DATETIME NOT NULL,
  `public` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC),
  INDEX `fk_tasks_users_idx` (`author` ASC),
  CONSTRAINT `fk_tasks_users`
    FOREIGN KEY (`author`)
    REFERENCES `skoj`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `skoj`.`submissions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `skoj`.`submissions` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Mislim da je to to i da nema nista vise da se dodaje',
  `user_id` INT UNSIGNED NOT NULL,
  `source` BLOB(16384) NOT NULL,
  `date` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_submissions_users1_idx` (`user_id` ASC),
  CONSTRAINT `fk_submissions_users1`
    FOREIGN KEY (`user_id`)
    REFERENCES `skoj`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `skoj`.`testcase`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `skoj`.`testcase` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(32) NOT NULL,
  `task_id` INT UNSIGNED NOT NULL,
  `source_input` BLOB(16384) NOT NULL,
  `source_output` BLOB(16384) NOT NULL,
  `instruction_limit` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_testcase_tasks1_idx` (`task_id` ASC),
  CONSTRAINT `fk_testcase_tasks1`
    FOREIGN KEY (`task_id`)
    REFERENCES `skoj`.`tasks` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `skoj`.`test_run`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `skoj`.`test_run` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `submission_id` INT UNSIGNED NOT NULL,
  `testcase_id` INT UNSIGNED NOT NULL,
  `status` INT NOT NULL COMMENT 'Ako je >=0, onda je jednak broju instrukcija\nU suprotnom status (TLE, RTE) po nekom zadatom kriterijumu',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_test_run_submissions1_idx` (`submission_id` ASC),
  INDEX `fk_test_run_testcase1_idx` (`testcase_id` ASC),
  CONSTRAINT `fk_test_run_submissions1`
    FOREIGN KEY (`submission_id`)
    REFERENCES `skoj`.`submissions` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_test_run_testcase1`
    FOREIGN KEY (`testcase_id`)
    REFERENCES `skoj`.`testcase` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
